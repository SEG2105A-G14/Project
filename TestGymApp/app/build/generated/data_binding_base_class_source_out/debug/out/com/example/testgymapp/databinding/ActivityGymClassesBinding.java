// Generated by view binder compiler. Do not edit!
package com.example.testgymapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testgymapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGymClassesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ListView classList;

  @NonNull
  public final Button completeClassEdit;

  @NonNull
  public final Button deleteClassButton;

  @NonNull
  public final EditText editClassDescription;

  @NonNull
  public final EditText editClassName;

  @NonNull
  public final LinearLayout editClassWindow;

  private ActivityGymClassesBinding(@NonNull ConstraintLayout rootView, @NonNull ListView classList,
      @NonNull Button completeClassEdit, @NonNull Button deleteClassButton,
      @NonNull EditText editClassDescription, @NonNull EditText editClassName,
      @NonNull LinearLayout editClassWindow) {
    this.rootView = rootView;
    this.classList = classList;
    this.completeClassEdit = completeClassEdit;
    this.deleteClassButton = deleteClassButton;
    this.editClassDescription = editClassDescription;
    this.editClassName = editClassName;
    this.editClassWindow = editClassWindow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGymClassesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGymClassesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_gym_classes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGymClassesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.classList;
      ListView classList = ViewBindings.findChildViewById(rootView, id);
      if (classList == null) {
        break missingId;
      }

      id = R.id.completeClassEdit;
      Button completeClassEdit = ViewBindings.findChildViewById(rootView, id);
      if (completeClassEdit == null) {
        break missingId;
      }

      id = R.id.deleteClassButton;
      Button deleteClassButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteClassButton == null) {
        break missingId;
      }

      id = R.id.editClassDescription;
      EditText editClassDescription = ViewBindings.findChildViewById(rootView, id);
      if (editClassDescription == null) {
        break missingId;
      }

      id = R.id.editClassName;
      EditText editClassName = ViewBindings.findChildViewById(rootView, id);
      if (editClassName == null) {
        break missingId;
      }

      id = R.id.editClassWindow;
      LinearLayout editClassWindow = ViewBindings.findChildViewById(rootView, id);
      if (editClassWindow == null) {
        break missingId;
      }

      return new ActivityGymClassesBinding((ConstraintLayout) rootView, classList,
          completeClassEdit, deleteClassButton, editClassDescription, editClassName,
          editClassWindow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
